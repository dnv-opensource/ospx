/*---------------------------------*- C++ -*----------------------------------*\
filetype dictionary; coding utf-8; version 0.1; local --; purpose --;
\*----------------------------------------------------------------------------*/
_environment
{
    libSource                           ../library;
}
systemStructure
{
    components
    {
        int_to_k_onst
        {
            initialize
            {
                const1.k
                {
                    causality     parameter;
                    start         0;
                    variability   fixed;
                }
            }
            fmu                         single_int_real/k_onst.fmu;
        }
        real_to_k_onst
        {
            initialize
            {
                const1.k
                {
                    causality     parameter;
                    start         0.;
                    variability   fixed;
                }
            }
            fmu                         single_int_real/k_onst.fmu;
        }
        int_to_constantVal
        {
            initialize
            {
                constVal.IN
                {
                    causality     parameter;
                    start         0;
                    variability   fixed;
                }
            }
            fmu                         single_int_real/constantVal.fmu;
        }
        real_to_constantVal
        {
            initialize
            {
                constVal.IN
                {
                    causality     parameter;
                    start         0.;
                    variability   fixed;
                }
            }
            fmu                         single_int_real/constantVal.fmu;
        }
    }
}
run
{
    simulation
    {
        name                            single_int_real_case;
        startTime                       0;
        stopTime                        1;
        baseStepSize                    0.01;
        algorithm                       fixedStep;
    }
}
