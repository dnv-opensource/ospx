# ðŸª„ This is your project's Sourcery configuration file.

# You can use it to get Sourcery working in the way you want, such as
# ignoring specific refactorings, skipping directories in your project,
# or writing custom rules.

# ðŸ“š For a complete reference to this file, see the documentation at
# https://docs.sourcery.ai/Configuration/Project-Settings/

# This file was auto-generated by Sourcery on 2022-10-13 at 18:12.

version: '1' # The schema version of this config file

ignore: # A list of paths or files which Sourcery will ignore.
  - .git
  - venv
  - .venv
  - env
  - .env

refactor:
  include: []
  skip: [] # A list of rule IDs Sourcery will never suggest.
  rule_types:
    - refactoring
    - suggestion
    - comment
  python_version: '3.9'

rules: # A list of custom rules Sourcery will include in its analysis.
  # - id: no-print-statements
  #   description: Do not use print statements in the test directory.
  #   pattern: print(...)
  #   replacement:
  #   condition:
  #   explanation:
  #   paths:
  #     include:
  #     - test
  #     exclude:
  #     - conftest.py
  #   tests: []
  - id: snake-case-variable-declarations
    pattern: |
      ${var}: ${type_annotation}
    condition: not var.is_snake_case() and not var.in_module_scope()
    description: Use snake case for variable names - `${var}`
    replacement: var
    explanation: |
      Use snake case for variables.

      This rule catches only variables that were declared with a type annotation.

      From Google Style Guide [3.16.2](https://google.github.io/styleguide/pyguide.html#s3.16.2-naming-conventions) and [PEP 8](https://peps.python.org/pep-0008/#function-and-variable-names)
    tests:
      - match: |
          def some_function():
            miXed: int
      - match: |
          def some_function():
            UpperCamelCase: int
      - match: |
          def some_function():
            UpperCamelCase42: int
      - match: |
          def some_function():
            mixed_and_underScore: int
      - match: |
          def some_function():
            too__many__underscores: str
      - match: |
          def some_function():
            _too__many__underscores: str
      - match: |
          def some_function():
            ___3_underscores_prefix: str
      - match: |
          def some_function():
            double_underscore_suffix__: str
      - no-match: |
          def some_function():
            nr: int = 42
      - no-match: |
          def some_function():
            miXed: int = 42
      - no-match: |
          def some_function():
            snake_nr: int = 42
      - no-match: simple_NR = 42
      - no-match: CONTEXT = "whatever"
      - no-match: |
          def some_function():
            _initial_value: int = 0
      - no-match: |
          def some_function():
            __initial_value: int = 0
      - no-match: __version__ = "3.14"
# metrics:
#   quality_threshold: 25.0

# github:
#   labels: []
#   ignore_labels:
#   - sourcery-ignore
#   request_review: author
#   sourcery_branch: sourcery/{base_branch}

# clone_detection:
#   min_lines: 3
#   min_duplicates: 2
#   identical_clones_only: false

# proxy:
#   url:
#   ssl_certs_file:
#   no_ssl_verify: false
